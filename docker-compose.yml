version: '3.9'

services:
  api:
    build:
      context: ./services/api
      target: dev
    ports:
      - "3001:3000"
    environment:
      - PORT=3000
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./services/api:/app
      - api_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3000/healthz').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./services/web
      target: dev
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=/api
    volumes:
      - ./services/web:/app
      - web_node_modules:/app/node_modules
    depends_on:
      api:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3000').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 5

  wa-bot:
    build:
      context: ./services/wa-bot
      target: dev
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - NODE_ENV=development
      - REDIS_URL=${REDIS_URL}
      - WA_DEVICE_LABEL=${WA_DEVICE_LABEL}
    volumes:
      - ./services/wa-bot:/app
      - wa_bot_node_modules:/app/node_modules
      - wa_bot_session:/app/session
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:4000').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 5

  scheduler:
    build:
      context: ./services/scheduler
      target: dev
    environment:
      - NODE_ENV=development
      - REDIS_URL=${REDIS_URL}
    volumes:
      - ./services/scheduler:/app
      - scheduler_node_modules:/app/node_modules
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "node -e \"process.exit(0)\""]
      interval: 30s
      timeout: 10s
      retries: 5

  worker:
    build:
      context: ./services/worker
      target: dev
    environment:
      - NODE_ENV=development
      - REDIS_URL=${REDIS_URL}
      - WORKER_QUEUE=wa-pos-jobs
    volumes:
      - ./services/worker:/app
      - worker_node_modules:/app/node_modules
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "node -e \"process.exit(0)\""]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      api:
        condition: service_healthy
      web:
        condition: service_healthy
      wa-bot:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  api_node_modules:
  web_node_modules:
  wa_bot_node_modules:
  scheduler_node_modules:
  worker_node_modules:
  wa_bot_session:
  postgres_data:
  redis_data:
